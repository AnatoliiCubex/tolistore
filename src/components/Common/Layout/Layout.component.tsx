import { PropsWithChildren, useEffect } from "react";
import { useRouter } from "next/router";
import Head from "next/head";
import classNames from "classnames";
// import jwtDecode from "jwt-decode";

import { useAppDispatch } from "@hooks/redux";

import { Header } from "@components/Common/Header";
import { Scrolling } from "@components/Common/Scrolling";

import { useProfileSelector } from "@reducers/profile/useProfileSelector";
import { useProfileActions } from "@reducers/profile/useProfileActions";
import { getUserDataThunk } from "@reducers/profile/profile.thunk";

import styles from "./Layout.module.scss";
import React from "react";

const siteTitle = "Tolistore";

export const LayoutComponent = React.forwardRef<
  HTMLDivElement,
  PropsWithChildren
>(({ children }, ref) => {
  const { accessToken, isSetFromLocalStorage } = useProfileSelector();
  const { changeAccessToken } = useProfileActions();
  const router = useRouter();
  const dispatch = useAppDispatch();

  const layoutClassName = classNames(`${styles.layout}`);

  const navigateAndClearToken = () => {
    changeAccessToken("");
    router.push("/login");
  };

  useEffect(() => {
    const token =
      typeof localStorage !== "undefined" &&
      localStorage.getItem("accessToken");
    if (typeof token === "string") {
      changeAccessToken(token);
    }
  }, []);

  useEffect(() => {
    if (!isSetFromLocalStorage) return;
    if (!accessToken) {
      return;
      navigateAndClearToken();
    }

    dispatch(getUserDataThunk());
  }, [accessToken]);

  return (
    <div className={layoutClassName}>
      <Head>
        <title>{siteTitle}</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <Header />
      <main ref={ref}>
        <Scrolling vertical className='container'>
          {children}
        </Scrolling>
      </main>
    </div>
  );
});

LayoutComponent.displayName = "Layout";
